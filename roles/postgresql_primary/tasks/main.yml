# 這是 PostgreSQL Primary 節點的 Ansible 任務檔案
- name: 設定正確的資料目錄變數（跨平台）
  ansible.builtin.set_fact:
    postgresql_data_dir: >-
      {{
        (postgresql_data_dir_redhat | default('/var/lib/pgsql/17/data')) if ansible_facts['os_family'] == 'RedHat'
        else (postgresql_data_dir_debian | default('/var/lib/postgresql/17/main'))
      }}

# ✅ RedHat 系列處理
- name: 安裝 PostgreSQL 17（RedHat）
  when: ansible_facts['os_family'] == "RedHat"
  block:
    - name: 加入 PostgreSQL Yum Repo
      ansible.builtin.get_url:
        url: https://download.postgresql.org/pub/repos/yum/reporpms/EL-9-x86_64/pgdg-redhat-repo-latest.noarch.rpm
        dest: /tmp/pgdg-redhat-repo.rpm
        mode: '0644'

    - name: 安裝 Yum Repo
      ansible.builtin.yum:
        name: /tmp/pgdg-redhat-repo.rpm
        state: present

    - name: 禁用內建 PostgreSQL 模組
      ansible.builtin.command: dnf -qy module disable postgresql
      args:
        creates: /etc/dnf/modules.d/postgresql.module
      changed_when: false

    - name: 安裝 PostgreSQL
      ansible.builtin.yum:
        name:
          - postgresql17-server
          - postgresql17
        state: present

# ✅ Debian/Ubuntu 系列處理
- name: 安裝 PostgreSQL 17（Debian/Ubuntu）
  when: ansible_facts['os_family'] == "Debian"
  block:
    - name: 建立 keyrings 資料夾（如未存在）
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: 先移除 pgdg 倉庫與所有衝突金鑰
      block:
        - name: 移除 pgdg 倉庫來源檔
          ansible.builtin.shell: rm -f /etc/apt/sources.list.d/*pgdg*.list
          changed_when: true
          ignore_errors: true

        - name: 移除可能衝突的金鑰檔案
          ansible.builtin.file:
            path: "{{ item }}"
            state: absent
          with_items:
            - /usr/share/keyrings/postgresql.gpg
            - /etc/apt/keyrings/postgresql.gpg
          ignore_errors: true

        - name: apt clean && apt update
          ansible.builtin.shell: |
            set -e
            apt clean
            apt update
          changed_when: false

    - name: 透過 keyserver 匯入 PostgreSQL GPG 金鑰
      ansible.builtin.shell: |
        gpg --no-default-keyring --keyring /etc/apt/keyrings/postgresql.gpg \
        --keyserver keyserver.ubuntu.com \
        --recv-keys 7FCC7D46ACCC4CF8
      args:
        creates: /etc/apt/keyrings/postgresql.gpg

    - name: 加入 PostgreSQL APT Repo（Ubuntu 22+ 包含 Noble）
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/postgresql.gpg arch=amd64] https://apt.postgresql.org/pub/repos/apt {{ ansible_distribution_release }}-pgdg main"
        filename: pgdg
        state: present
        update_cache: true

    - name: 安裝 PostgreSQL
      ansible.builtin.apt:
        name:
          - postgresql-17
        state: present

# ✅ 共通步驟
- name: 部署 postgresql.conf（readonly 可選）
  ansible.builtin.template:
    src: postgresql.conf.j2
    dest: "{{ postgresql_data_dir }}/postgresql.conf"
    owner: postgres
    group: postgres
    mode: '0644'
  notify: Restart PostgreSQL

- name: 部署 pg_hba.conf
  ansible.builtin.template:
    src: pg_hba.conf.j2
    dest: "{{ postgresql_data_dir }}/pg_hba.conf"
    owner: postgres
    group: postgres
    mode: '0600'
  notify: Reload PostgreSQL

- name: 啟動 PostgreSQL 服務
  ansible.builtin.service:
    name: postgresql-17
    state: started
    enabled: true

- name: Restart PostgreSQL
  ansible.builtin.systemd:
    name: postgresql-17
    state: restarted

- name: Reload PostgreSQL
  ansible.builtin.systemd:
    name: postgresql-17
    state: reloaded